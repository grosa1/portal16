// Inspired by https://github.com/corysimmons/typographic
// not done - edit as the site needs base styling.
// Currently we do not know what we want the look to be and which libraries that might style elemets for us
// @todo line-height should change according to the font-size.
// @see http://gregrickaby.com/using-the-golden-ratio-and-rems/

// Sans-serif
// we use $helvetica
$openSans = 'Open Sans', 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'
$roboto = 'Roboto', 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'
$calibri = 'Calibri', 'Candara', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif'
$candara = 'Candara', 'Calibri', 'Segoe', 'Segoe UI', 'Optima', 'Arial', 'sans-serif'
$courier = 'Courier', 'Lucida Sans Typewriter', 'Lucida Typewriter', 'monospace'
$franklin = 'Franklin Gothic Medium', 'Arial', 'sans-serif'
$futura = 'Futura', 'Trebuchet MS', 'Arial', 'sans-serif'
$geneva = 'Geneva', 'Tahoma', 'Verdana', 'sans-serif'
$gillSans = 'Gill Sans', 'Gill Sans MT', 'Calibri', 'sans-serif'
$helvetica = 'Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'
$lucidaGrande = 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Geneva', 'Verdana', 'sans-serif'
$optima = 'Optima', 'Segoe', 'Segoe UI', 'Candara', 'Calibri', 'Arial', 'sans-serif'
$segoe = 'Segoe', 'Segoe UI', 'Helvetica Neue', 'Arial', 'sans-serif'
$tahoma = 'Tahoma', 'Geneva', 'Verdana', 'sans-serif'
$trebuchet = 'Trebuchet MS', 'Lucida Grande', 'Lucida Sans Unicode', 'Lucida Sans', 'Tahoma', 'sans-serif'
$verdana = 'Verdana', 'Geneva', 'sans-serif'

// Serif

$antiqua = 'Book Antiqua', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif'
$baskerville = 'Baskerville', 'Baskerville old face', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'
$bodoni = 'Bodoni MT', 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'
$cambria = 'Cambria', 'Georgia', 'serif'
$caslon = 'Big Caslon', 'Book Antiqua', 'Palatino Linotype', 'Georgia', 'serif'
$constantia = 'Constantia', 'Palatino', 'Palatino Linotype', 'Palatino LT STD', 'Georgia', 'serif'
$didot = 'Didot', 'Didot LT STD', 'Hoefler Text', 'Garamond', 'Times New Roman', 'serif'
$garamond = 'Garamond', 'Baskerville', 'Baskerville Old Face', 'Hoefler Text', 'Times New Roman', 'serif'
$goudy = 'Goudy Old Style', 'Garamond', 'Big Caslon', 'Times New Roman', 'serif'
$hoefler = 'Hoefler Text', 'Baskerville old face', 'Garamond', 'Times New Roman', 'serif'
$lucidaBright = 'Lucida Bright', 'Georgia', 'serif'
$palatino = 'Palatino', 'Palatino Linotype', 'Palatino LT STD', "Book Antiqua", 'Georgia', 'serif'

// Settings
$htmlFontSize = 14px
$headerRatio = $golden
$headerFont = $roboto
$headerFontWeight = 600
$bodyFont = $roboto
$bodyFontWeight = 400
$lineHeightRatio = 1.42857142857
$baseLineHeight = ($lineHeightRatio) rem

// Color
$headerColor = #3C436F
$bodyTextColor = $blueTintedBlack
$linkColor = #0099cc
$citationTextColor = #758082

// Ratios
// https://24ways.org/2011/composing-the-new-canon
$minorSecond = 1.067
$majorSecond = 1.125
$minorThird = 1.2
$majorThird = 1.25
$perfectFourth = 1.333
$augFourth = 1.414
$perfectFifth = 1.5
$minorSixth = 1.6
$golden = 1.618
$majorSixth = 1.667
$minorSeventh = 1.778
$majorSeventh = 1.875
$octave = 2
$majorTenth = 2.5
$majorEleventh = 2.667
$majorTwelfth = 3
$doubleOctave = 4

$typeBaseRatio = $perfectFourth
//small text, body text,large text, main heading, hero heading
$typeScale = 0.707, 1, 1.414, 1.999, 2.827, 3.998, 4.209, 5.610
typeScale($level)
    return $typeScale[$level + 1]

$lineHeights = $baseLineHeight, $baseLineHeight, $baseLineHeight, $baseLineHeight * 2, $baseLineHeight * 2, $baseLineHeight * 3, $baseLineHeight * 3, $baseLineHeight * 6
typeLineHeight($level)
    return $lineHeights[$level + 1]

setType($level = 0)
    font-size (typeScale($level)) rem
    line-height (typeLineHeight($level)) rem

// Helpers

/**
 * Creates a baseline grid based off your $lineHeightRatio to help visualize your vertical rhythm grid. You can offset the grid by negative or positive pixels to line it up perfectly with the bottom of your text.
 *
 * @param {color} [$color=black] - A color to be lightened and used as the color for the grid.
 * @param {number} [$pxOffset=false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text.
 *
 * @example
 *   .site-wrapper
 *       gridOverlay(blue, 2)
 */
gridOverlay($color = black, $pxOffset = false)
    background: linear-gradient(to top, rgba($color, 10%) 5%, transparent 5%)
    background-size: 100% ($lineHeightRatio) em //$baseLineHeight
    if $pxOffset
        background-position: 0 unit($pxOffset, 'px')

/**
 * Returns a "vertical unit". Useful for specifying the height and margins of non-text elements like images and such.
 *
 * @param {number} [$units=1] - Number of units. Accepts floated numbers as well.
 * @param {number} [$pxOffset=false] - A positive or negative number of pixels to offset the grid by. Useful for lining the bottom of the gridlines up with your text. Since this doesn't compute a literal pixel you may need to use a floated number (multiples of .25 work well) to keep your rhythm on track.
 *
 * @example
 *   img
 *     vrBlock(5.25, .5)
 */
vrBlock($units = 1, $pxOffset = false)
    if $pxOffset
        return $units * $baseLineHeight + $pxOffset
    else
        return $units * $baseLineHeight

/**
 * The Typographic Reset. This is where Typographic goes through every markup element and styles it to adhere to a vertical rhythm. After you set your variables in a settings file fire this mixin.
 *
 * @example
 *   typographic()
 */
typographic() {

    html {
        font-size $htmlFontSize
    }
    body {
        font-family $bodyFont
        font-weight $bodyFontWeight
        text-rendering optimizeLegibility
        font-smooth auto
        font-smoothing auto
        -webkit-font-smoothing auto
        -moz-osx-font-smoothing auto
        line-height $lineHeightRatio
        color $bodyTextColor
    }

    h1, h2, .h1, .h2 {
        font-weight 400
    }
    h3, .h3 {
        font-weight 500
    }

    .table {
        th {
            font-weight normal
        }
    }

    a[href=""], a[href=""]:hover, a[href=""]:focus {
        text-decoration none
        //color inherit
    }

    .smaller {
        //font-weight 600
        font-size 12px
    }

}
